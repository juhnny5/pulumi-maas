// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Machine extends pulumi.CustomResource {
    /**
     * Get an existing Machine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MachineState, opts?: pulumi.CustomResourceOptions): Machine {
        return new Machine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'maas:index/machine:Machine';

    /**
     * Returns true if the given object is an instance of Machine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Machine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Machine.__pulumiType;
    }

    /**
     * The architecture type of the machine. Defaults to `amd64/generic`.
     */
    public readonly architecture!: pulumi.Output<string | undefined>;
    /**
     * The domain of the machine. This is computed if it's not set.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The machine hostname. This is computed if it's not set.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * The minimum kernel version allowed to run on this machine. Only used when deploying Ubuntu. This is computed if it's not
     * set.
     */
    public readonly minHweKernel!: pulumi.Output<string>;
    /**
     * The resource pool of the machine. This is computed if it's not set.
     */
    public readonly pool!: pulumi.Output<string>;
    /**
     * A map with the parameters specific to the `power_type`. See [Power types](https://maas.io/docs/api#power-types) section
     * for a list of the available power parameters for each power type.
     */
    public readonly powerParameters!: pulumi.Output<{[key: string]: string}>;
    /**
     * A power management type (e.g. `ipmi`).
     */
    public readonly powerType!: pulumi.Output<string>;
    /**
     * The MAC address of the machine's PXE boot NIC.
     */
    public readonly pxeMacAddress!: pulumi.Output<string>;
    /**
     * The zone of the machine. This is computed if it's not set.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a Machine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MachineArgs | MachineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MachineState | undefined;
            resourceInputs["architecture"] = state ? state.architecture : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["minHweKernel"] = state ? state.minHweKernel : undefined;
            resourceInputs["pool"] = state ? state.pool : undefined;
            resourceInputs["powerParameters"] = state ? state.powerParameters : undefined;
            resourceInputs["powerType"] = state ? state.powerType : undefined;
            resourceInputs["pxeMacAddress"] = state ? state.pxeMacAddress : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as MachineArgs | undefined;
            if ((!args || args.powerParameters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'powerParameters'");
            }
            if ((!args || args.powerType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'powerType'");
            }
            if ((!args || args.pxeMacAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pxeMacAddress'");
            }
            resourceInputs["architecture"] = args ? args.architecture : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["minHweKernel"] = args ? args.minHweKernel : undefined;
            resourceInputs["pool"] = args ? args.pool : undefined;
            resourceInputs["powerParameters"] = args?.powerParameters ? pulumi.secret(args.powerParameters) : undefined;
            resourceInputs["powerType"] = args ? args.powerType : undefined;
            resourceInputs["pxeMacAddress"] = args ? args.pxeMacAddress : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["powerParameters"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Machine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Machine resources.
 */
export interface MachineState {
    /**
     * The architecture type of the machine. Defaults to `amd64/generic`.
     */
    architecture?: pulumi.Input<string>;
    /**
     * The domain of the machine. This is computed if it's not set.
     */
    domain?: pulumi.Input<string>;
    /**
     * The machine hostname. This is computed if it's not set.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The minimum kernel version allowed to run on this machine. Only used when deploying Ubuntu. This is computed if it's not
     * set.
     */
    minHweKernel?: pulumi.Input<string>;
    /**
     * The resource pool of the machine. This is computed if it's not set.
     */
    pool?: pulumi.Input<string>;
    /**
     * A map with the parameters specific to the `power_type`. See [Power types](https://maas.io/docs/api#power-types) section
     * for a list of the available power parameters for each power type.
     */
    powerParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A power management type (e.g. `ipmi`).
     */
    powerType?: pulumi.Input<string>;
    /**
     * The MAC address of the machine's PXE boot NIC.
     */
    pxeMacAddress?: pulumi.Input<string>;
    /**
     * The zone of the machine. This is computed if it's not set.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Machine resource.
 */
export interface MachineArgs {
    /**
     * The architecture type of the machine. Defaults to `amd64/generic`.
     */
    architecture?: pulumi.Input<string>;
    /**
     * The domain of the machine. This is computed if it's not set.
     */
    domain?: pulumi.Input<string>;
    /**
     * The machine hostname. This is computed if it's not set.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The minimum kernel version allowed to run on this machine. Only used when deploying Ubuntu. This is computed if it's not
     * set.
     */
    minHweKernel?: pulumi.Input<string>;
    /**
     * The resource pool of the machine. This is computed if it's not set.
     */
    pool?: pulumi.Input<string>;
    /**
     * A map with the parameters specific to the `power_type`. See [Power types](https://maas.io/docs/api#power-types) section
     * for a list of the available power parameters for each power type.
     */
    powerParameters: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A power management type (e.g. `ipmi`).
     */
    powerType: pulumi.Input<string>;
    /**
     * The MAC address of the machine's PXE boot NIC.
     */
    pxeMacAddress: pulumi.Input<string>;
    /**
     * The zone of the machine. This is computed if it's not set.
     */
    zone?: pulumi.Input<string>;
}
