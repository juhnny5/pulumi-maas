// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NetworkInterfaceLink extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInterfaceLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkInterfaceLinkState, opts?: pulumi.CustomResourceOptions): NetworkInterfaceLink {
        return new NetworkInterfaceLink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'maas:index/networkInterfaceLink:NetworkInterfaceLink';

    /**
     * Returns true if the given object is an instance of NetworkInterfaceLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInterfaceLink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInterfaceLink.__pulumiType;
    }

    /**
     * Boolean value. When enabled, it sets the subnet gateway IP address as the default gateway for the machine the interface
     * belongs to. This option can only be used with the `AUTO` and `STATIC` modes. Defaults to `false`.
     */
    public readonly defaultGateway!: pulumi.Output<boolean | undefined>;
    /**
     * Valid IP address (from the given subnet) to be configured on the network interface. Only used when `mode` is set to
     * `STATIC`.
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * The identifier (system ID, hostname, or FQDN) of the machine with the network interface.
     */
    public readonly machine!: pulumi.Output<string>;
    /**
     * Connection mode to subnet. It defaults to `AUTO`. Valid options are: * `AUTO` - Random static IP address from the
     * subnet. * `DHCP` - IP address from the DHCP on the given subnet. * `STATIC` - Use `ip_address` as static IP address. *
     * `LINK_UP` - Bring the interface up only on the given subnet. No IP address will be assigned.
     */
    public readonly mode!: pulumi.Output<string | undefined>;
    /**
     * The identifier (MAC address, name, or ID) of the network interface.
     */
    public readonly networkInterface!: pulumi.Output<string>;
    /**
     * The identifier (CIDR or ID) of the subnet to be connected.
     */
    public readonly subnet!: pulumi.Output<string>;

    /**
     * Create a NetworkInterfaceLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInterfaceLinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkInterfaceLinkArgs | NetworkInterfaceLinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkInterfaceLinkState | undefined;
            resourceInputs["defaultGateway"] = state ? state.defaultGateway : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["machine"] = state ? state.machine : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["networkInterface"] = state ? state.networkInterface : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
        } else {
            const args = argsOrState as NetworkInterfaceLinkArgs | undefined;
            if ((!args || args.machine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'machine'");
            }
            if ((!args || args.networkInterface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterface'");
            }
            if ((!args || args.subnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnet'");
            }
            resourceInputs["defaultGateway"] = args ? args.defaultGateway : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["machine"] = args ? args.machine : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["networkInterface"] = args ? args.networkInterface : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkInterfaceLink.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkInterfaceLink resources.
 */
export interface NetworkInterfaceLinkState {
    /**
     * Boolean value. When enabled, it sets the subnet gateway IP address as the default gateway for the machine the interface
     * belongs to. This option can only be used with the `AUTO` and `STATIC` modes. Defaults to `false`.
     */
    defaultGateway?: pulumi.Input<boolean>;
    /**
     * Valid IP address (from the given subnet) to be configured on the network interface. Only used when `mode` is set to
     * `STATIC`.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The identifier (system ID, hostname, or FQDN) of the machine with the network interface.
     */
    machine?: pulumi.Input<string>;
    /**
     * Connection mode to subnet. It defaults to `AUTO`. Valid options are: * `AUTO` - Random static IP address from the
     * subnet. * `DHCP` - IP address from the DHCP on the given subnet. * `STATIC` - Use `ip_address` as static IP address. *
     * `LINK_UP` - Bring the interface up only on the given subnet. No IP address will be assigned.
     */
    mode?: pulumi.Input<string>;
    /**
     * The identifier (MAC address, name, or ID) of the network interface.
     */
    networkInterface?: pulumi.Input<string>;
    /**
     * The identifier (CIDR or ID) of the subnet to be connected.
     */
    subnet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkInterfaceLink resource.
 */
export interface NetworkInterfaceLinkArgs {
    /**
     * Boolean value. When enabled, it sets the subnet gateway IP address as the default gateway for the machine the interface
     * belongs to. This option can only be used with the `AUTO` and `STATIC` modes. Defaults to `false`.
     */
    defaultGateway?: pulumi.Input<boolean>;
    /**
     * Valid IP address (from the given subnet) to be configured on the network interface. Only used when `mode` is set to
     * `STATIC`.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The identifier (system ID, hostname, or FQDN) of the machine with the network interface.
     */
    machine: pulumi.Input<string>;
    /**
     * Connection mode to subnet. It defaults to `AUTO`. Valid options are: * `AUTO` - Random static IP address from the
     * subnet. * `DHCP` - IP address from the DHCP on the given subnet. * `STATIC` - Use `ip_address` as static IP address. *
     * `LINK_UP` - Bring the interface up only on the given subnet. No IP address will be assigned.
     */
    mode?: pulumi.Input<string>;
    /**
     * The identifier (MAC address, name, or ID) of the network interface.
     */
    networkInterface: pulumi.Input<string>;
    /**
     * The identifier (CIDR or ID) of the subnet to be connected.
     */
    subnet: pulumi.Input<string>;
}
