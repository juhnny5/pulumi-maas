// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VmHostMachine extends pulumi.CustomResource {
    /**
     * Get an existing VmHostMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VmHostMachineState, opts?: pulumi.CustomResourceOptions): VmHostMachine {
        return new VmHostMachine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'maas:index/vmHostMachine:VmHostMachine';

    /**
     * Returns true if the given object is an instance of VmHostMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VmHostMachine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VmHostMachine.__pulumiType;
    }

    /**
     * The number of CPU cores (defaults to 1).
     */
    public readonly cores!: pulumi.Output<number | undefined>;
    /**
     * The VM host machine domain. This is computed if it's not set.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The VM host machine hostname. This is computed if it's not set.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * The VM host machine RAM memory, specified in MB (defaults to 2048).
     */
    public readonly memory!: pulumi.Output<number | undefined>;
    /**
     * A list of network interfaces for new the VM host. This argument only works when the VM host is deployed from a
     * registered MAAS machine. Parameters defined below. This argument is processed in [attribute-as-blocks
     * mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
     */
    public readonly networkInterfaces!: pulumi.Output<outputs.VmHostMachineNetworkInterface[] | undefined>;
    /**
     * List of host CPU cores to pin the VM host machine to. If this is passed, the `cores` parameter is ignored.
     */
    public readonly pinnedCores!: pulumi.Output<number | undefined>;
    /**
     * The VM host machine pool. This is computed if it's not set.
     */
    public readonly pool!: pulumi.Output<string>;
    /**
     * A list of storage disks for the new VM host. Parameters defined below. This argument is processed in
     * [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
     */
    public readonly storageDisks!: pulumi.Output<outputs.VmHostMachineStorageDisk[] | undefined>;
    /**
     * ID or name of the VM host used to compose the new machine.
     */
    public readonly vmHost!: pulumi.Output<string>;
    /**
     * The VM host machine zone. This is computed if it's not set.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a VmHostMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VmHostMachineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VmHostMachineArgs | VmHostMachineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VmHostMachineState | undefined;
            resourceInputs["cores"] = state ? state.cores : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["pinnedCores"] = state ? state.pinnedCores : undefined;
            resourceInputs["pool"] = state ? state.pool : undefined;
            resourceInputs["storageDisks"] = state ? state.storageDisks : undefined;
            resourceInputs["vmHost"] = state ? state.vmHost : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as VmHostMachineArgs | undefined;
            if ((!args || args.vmHost === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vmHost'");
            }
            resourceInputs["cores"] = args ? args.cores : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["pinnedCores"] = args ? args.pinnedCores : undefined;
            resourceInputs["pool"] = args ? args.pool : undefined;
            resourceInputs["storageDisks"] = args ? args.storageDisks : undefined;
            resourceInputs["vmHost"] = args ? args.vmHost : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VmHostMachine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VmHostMachine resources.
 */
export interface VmHostMachineState {
    /**
     * The number of CPU cores (defaults to 1).
     */
    cores?: pulumi.Input<number>;
    /**
     * The VM host machine domain. This is computed if it's not set.
     */
    domain?: pulumi.Input<string>;
    /**
     * The VM host machine hostname. This is computed if it's not set.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The VM host machine RAM memory, specified in MB (defaults to 2048).
     */
    memory?: pulumi.Input<number>;
    /**
     * A list of network interfaces for new the VM host. This argument only works when the VM host is deployed from a
     * registered MAAS machine. Parameters defined below. This argument is processed in [attribute-as-blocks
     * mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.VmHostMachineNetworkInterface>[]>;
    /**
     * List of host CPU cores to pin the VM host machine to. If this is passed, the `cores` parameter is ignored.
     */
    pinnedCores?: pulumi.Input<number>;
    /**
     * The VM host machine pool. This is computed if it's not set.
     */
    pool?: pulumi.Input<string>;
    /**
     * A list of storage disks for the new VM host. Parameters defined below. This argument is processed in
     * [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
     */
    storageDisks?: pulumi.Input<pulumi.Input<inputs.VmHostMachineStorageDisk>[]>;
    /**
     * ID or name of the VM host used to compose the new machine.
     */
    vmHost?: pulumi.Input<string>;
    /**
     * The VM host machine zone. This is computed if it's not set.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VmHostMachine resource.
 */
export interface VmHostMachineArgs {
    /**
     * The number of CPU cores (defaults to 1).
     */
    cores?: pulumi.Input<number>;
    /**
     * The VM host machine domain. This is computed if it's not set.
     */
    domain?: pulumi.Input<string>;
    /**
     * The VM host machine hostname. This is computed if it's not set.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The VM host machine RAM memory, specified in MB (defaults to 2048).
     */
    memory?: pulumi.Input<number>;
    /**
     * A list of network interfaces for new the VM host. This argument only works when the VM host is deployed from a
     * registered MAAS machine. Parameters defined below. This argument is processed in [attribute-as-blocks
     * mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.VmHostMachineNetworkInterface>[]>;
    /**
     * List of host CPU cores to pin the VM host machine to. If this is passed, the `cores` parameter is ignored.
     */
    pinnedCores?: pulumi.Input<number>;
    /**
     * The VM host machine pool. This is computed if it's not set.
     */
    pool?: pulumi.Input<string>;
    /**
     * A list of storage disks for the new VM host. Parameters defined below. This argument is processed in
     * [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
     */
    storageDisks?: pulumi.Input<pulumi.Input<inputs.VmHostMachineStorageDisk>[]>;
    /**
     * ID or name of the VM host used to compose the new machine.
     */
    vmHost: pulumi.Input<string>;
    /**
     * The VM host machine zone. This is computed if it's not set.
     */
    zone?: pulumi.Input<string>;
}
