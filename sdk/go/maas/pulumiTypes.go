// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maas

import (
	"context"
	"reflect"

	"github.com/juhnny5/pulumi-maas/sdk/go/maas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type BlockDevicePartition struct {
	Bootable      *bool    `pulumi:"bootable"`
	FsType        *string  `pulumi:"fsType"`
	Label         *string  `pulumi:"label"`
	MountOptions  *string  `pulumi:"mountOptions"`
	MountPoint    *string  `pulumi:"mountPoint"`
	Path          *string  `pulumi:"path"`
	SizeGigabytes int      `pulumi:"sizeGigabytes"`
	Tags          []string `pulumi:"tags"`
}

// BlockDevicePartitionInput is an input type that accepts BlockDevicePartitionArgs and BlockDevicePartitionOutput values.
// You can construct a concrete instance of `BlockDevicePartitionInput` via:
//
//	BlockDevicePartitionArgs{...}
type BlockDevicePartitionInput interface {
	pulumi.Input

	ToBlockDevicePartitionOutput() BlockDevicePartitionOutput
	ToBlockDevicePartitionOutputWithContext(context.Context) BlockDevicePartitionOutput
}

type BlockDevicePartitionArgs struct {
	Bootable      pulumi.BoolPtrInput     `pulumi:"bootable"`
	FsType        pulumi.StringPtrInput   `pulumi:"fsType"`
	Label         pulumi.StringPtrInput   `pulumi:"label"`
	MountOptions  pulumi.StringPtrInput   `pulumi:"mountOptions"`
	MountPoint    pulumi.StringPtrInput   `pulumi:"mountPoint"`
	Path          pulumi.StringPtrInput   `pulumi:"path"`
	SizeGigabytes pulumi.IntInput         `pulumi:"sizeGigabytes"`
	Tags          pulumi.StringArrayInput `pulumi:"tags"`
}

func (BlockDevicePartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDevicePartition)(nil)).Elem()
}

func (i BlockDevicePartitionArgs) ToBlockDevicePartitionOutput() BlockDevicePartitionOutput {
	return i.ToBlockDevicePartitionOutputWithContext(context.Background())
}

func (i BlockDevicePartitionArgs) ToBlockDevicePartitionOutputWithContext(ctx context.Context) BlockDevicePartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDevicePartitionOutput)
}

// BlockDevicePartitionArrayInput is an input type that accepts BlockDevicePartitionArray and BlockDevicePartitionArrayOutput values.
// You can construct a concrete instance of `BlockDevicePartitionArrayInput` via:
//
//	BlockDevicePartitionArray{ BlockDevicePartitionArgs{...} }
type BlockDevicePartitionArrayInput interface {
	pulumi.Input

	ToBlockDevicePartitionArrayOutput() BlockDevicePartitionArrayOutput
	ToBlockDevicePartitionArrayOutputWithContext(context.Context) BlockDevicePartitionArrayOutput
}

type BlockDevicePartitionArray []BlockDevicePartitionInput

func (BlockDevicePartitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDevicePartition)(nil)).Elem()
}

func (i BlockDevicePartitionArray) ToBlockDevicePartitionArrayOutput() BlockDevicePartitionArrayOutput {
	return i.ToBlockDevicePartitionArrayOutputWithContext(context.Background())
}

func (i BlockDevicePartitionArray) ToBlockDevicePartitionArrayOutputWithContext(ctx context.Context) BlockDevicePartitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlockDevicePartitionArrayOutput)
}

type BlockDevicePartitionOutput struct{ *pulumi.OutputState }

func (BlockDevicePartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlockDevicePartition)(nil)).Elem()
}

func (o BlockDevicePartitionOutput) ToBlockDevicePartitionOutput() BlockDevicePartitionOutput {
	return o
}

func (o BlockDevicePartitionOutput) ToBlockDevicePartitionOutputWithContext(ctx context.Context) BlockDevicePartitionOutput {
	return o
}

func (o BlockDevicePartitionOutput) Bootable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlockDevicePartition) *bool { return v.Bootable }).(pulumi.BoolPtrOutput)
}

func (o BlockDevicePartitionOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDevicePartition) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

func (o BlockDevicePartitionOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDevicePartition) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o BlockDevicePartitionOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDevicePartition) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

func (o BlockDevicePartitionOutput) MountPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDevicePartition) *string { return v.MountPoint }).(pulumi.StringPtrOutput)
}

func (o BlockDevicePartitionOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlockDevicePartition) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o BlockDevicePartitionOutput) SizeGigabytes() pulumi.IntOutput {
	return o.ApplyT(func(v BlockDevicePartition) int { return v.SizeGigabytes }).(pulumi.IntOutput)
}

func (o BlockDevicePartitionOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlockDevicePartition) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type BlockDevicePartitionArrayOutput struct{ *pulumi.OutputState }

func (BlockDevicePartitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BlockDevicePartition)(nil)).Elem()
}

func (o BlockDevicePartitionArrayOutput) ToBlockDevicePartitionArrayOutput() BlockDevicePartitionArrayOutput {
	return o
}

func (o BlockDevicePartitionArrayOutput) ToBlockDevicePartitionArrayOutputWithContext(ctx context.Context) BlockDevicePartitionArrayOutput {
	return o
}

func (o BlockDevicePartitionArrayOutput) Index(i pulumi.IntInput) BlockDevicePartitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BlockDevicePartition {
		return vs[0].([]BlockDevicePartition)[vs[1].(int)]
	}).(BlockDevicePartitionOutput)
}

type InstanceAllocateParams struct {
	Hostname    *string  `pulumi:"hostname"`
	MinCpuCount *int     `pulumi:"minCpuCount"`
	MinMemory   *int     `pulumi:"minMemory"`
	Pool        *string  `pulumi:"pool"`
	Tags        []string `pulumi:"tags"`
	Zone        *string  `pulumi:"zone"`
}

// InstanceAllocateParamsInput is an input type that accepts InstanceAllocateParamsArgs and InstanceAllocateParamsOutput values.
// You can construct a concrete instance of `InstanceAllocateParamsInput` via:
//
//	InstanceAllocateParamsArgs{...}
type InstanceAllocateParamsInput interface {
	pulumi.Input

	ToInstanceAllocateParamsOutput() InstanceAllocateParamsOutput
	ToInstanceAllocateParamsOutputWithContext(context.Context) InstanceAllocateParamsOutput
}

type InstanceAllocateParamsArgs struct {
	Hostname    pulumi.StringPtrInput   `pulumi:"hostname"`
	MinCpuCount pulumi.IntPtrInput      `pulumi:"minCpuCount"`
	MinMemory   pulumi.IntPtrInput      `pulumi:"minMemory"`
	Pool        pulumi.StringPtrInput   `pulumi:"pool"`
	Tags        pulumi.StringArrayInput `pulumi:"tags"`
	Zone        pulumi.StringPtrInput   `pulumi:"zone"`
}

func (InstanceAllocateParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAllocateParams)(nil)).Elem()
}

func (i InstanceAllocateParamsArgs) ToInstanceAllocateParamsOutput() InstanceAllocateParamsOutput {
	return i.ToInstanceAllocateParamsOutputWithContext(context.Background())
}

func (i InstanceAllocateParamsArgs) ToInstanceAllocateParamsOutputWithContext(ctx context.Context) InstanceAllocateParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAllocateParamsOutput)
}

func (i InstanceAllocateParamsArgs) ToInstanceAllocateParamsPtrOutput() InstanceAllocateParamsPtrOutput {
	return i.ToInstanceAllocateParamsPtrOutputWithContext(context.Background())
}

func (i InstanceAllocateParamsArgs) ToInstanceAllocateParamsPtrOutputWithContext(ctx context.Context) InstanceAllocateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAllocateParamsOutput).ToInstanceAllocateParamsPtrOutputWithContext(ctx)
}

// InstanceAllocateParamsPtrInput is an input type that accepts InstanceAllocateParamsArgs, InstanceAllocateParamsPtr and InstanceAllocateParamsPtrOutput values.
// You can construct a concrete instance of `InstanceAllocateParamsPtrInput` via:
//
//	        InstanceAllocateParamsArgs{...}
//
//	or:
//
//	        nil
type InstanceAllocateParamsPtrInput interface {
	pulumi.Input

	ToInstanceAllocateParamsPtrOutput() InstanceAllocateParamsPtrOutput
	ToInstanceAllocateParamsPtrOutputWithContext(context.Context) InstanceAllocateParamsPtrOutput
}

type instanceAllocateParamsPtrType InstanceAllocateParamsArgs

func InstanceAllocateParamsPtr(v *InstanceAllocateParamsArgs) InstanceAllocateParamsPtrInput {
	return (*instanceAllocateParamsPtrType)(v)
}

func (*instanceAllocateParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAllocateParams)(nil)).Elem()
}

func (i *instanceAllocateParamsPtrType) ToInstanceAllocateParamsPtrOutput() InstanceAllocateParamsPtrOutput {
	return i.ToInstanceAllocateParamsPtrOutputWithContext(context.Background())
}

func (i *instanceAllocateParamsPtrType) ToInstanceAllocateParamsPtrOutputWithContext(ctx context.Context) InstanceAllocateParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAllocateParamsPtrOutput)
}

type InstanceAllocateParamsOutput struct{ *pulumi.OutputState }

func (InstanceAllocateParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAllocateParams)(nil)).Elem()
}

func (o InstanceAllocateParamsOutput) ToInstanceAllocateParamsOutput() InstanceAllocateParamsOutput {
	return o
}

func (o InstanceAllocateParamsOutput) ToInstanceAllocateParamsOutputWithContext(ctx context.Context) InstanceAllocateParamsOutput {
	return o
}

func (o InstanceAllocateParamsOutput) ToInstanceAllocateParamsPtrOutput() InstanceAllocateParamsPtrOutput {
	return o.ToInstanceAllocateParamsPtrOutputWithContext(context.Background())
}

func (o InstanceAllocateParamsOutput) ToInstanceAllocateParamsPtrOutputWithContext(ctx context.Context) InstanceAllocateParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceAllocateParams) *InstanceAllocateParams {
		return &v
	}).(InstanceAllocateParamsPtrOutput)
}

func (o InstanceAllocateParamsOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceAllocateParams) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o InstanceAllocateParamsOutput) MinCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAllocateParams) *int { return v.MinCpuCount }).(pulumi.IntPtrOutput)
}

func (o InstanceAllocateParamsOutput) MinMemory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceAllocateParams) *int { return v.MinMemory }).(pulumi.IntPtrOutput)
}

func (o InstanceAllocateParamsOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceAllocateParams) *string { return v.Pool }).(pulumi.StringPtrOutput)
}

func (o InstanceAllocateParamsOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceAllocateParams) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o InstanceAllocateParamsOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceAllocateParams) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceAllocateParamsPtrOutput struct{ *pulumi.OutputState }

func (InstanceAllocateParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAllocateParams)(nil)).Elem()
}

func (o InstanceAllocateParamsPtrOutput) ToInstanceAllocateParamsPtrOutput() InstanceAllocateParamsPtrOutput {
	return o
}

func (o InstanceAllocateParamsPtrOutput) ToInstanceAllocateParamsPtrOutputWithContext(ctx context.Context) InstanceAllocateParamsPtrOutput {
	return o
}

func (o InstanceAllocateParamsPtrOutput) Elem() InstanceAllocateParamsOutput {
	return o.ApplyT(func(v *InstanceAllocateParams) InstanceAllocateParams {
		if v != nil {
			return *v
		}
		var ret InstanceAllocateParams
		return ret
	}).(InstanceAllocateParamsOutput)
}

func (o InstanceAllocateParamsPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceAllocateParams) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

func (o InstanceAllocateParamsPtrOutput) MinCpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAllocateParams) *int {
		if v == nil {
			return nil
		}
		return v.MinCpuCount
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAllocateParamsPtrOutput) MinMemory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceAllocateParams) *int {
		if v == nil {
			return nil
		}
		return v.MinMemory
	}).(pulumi.IntPtrOutput)
}

func (o InstanceAllocateParamsPtrOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceAllocateParams) *string {
		if v == nil {
			return nil
		}
		return v.Pool
	}).(pulumi.StringPtrOutput)
}

func (o InstanceAllocateParamsPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceAllocateParams) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

func (o InstanceAllocateParamsPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceAllocateParams) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type InstanceDeployParams struct {
	DistroSeries *string `pulumi:"distroSeries"`
	EnableHwSync *bool   `pulumi:"enableHwSync"`
	HweKernel    *string `pulumi:"hweKernel"`
	UserData     *string `pulumi:"userData"`
}

// InstanceDeployParamsInput is an input type that accepts InstanceDeployParamsArgs and InstanceDeployParamsOutput values.
// You can construct a concrete instance of `InstanceDeployParamsInput` via:
//
//	InstanceDeployParamsArgs{...}
type InstanceDeployParamsInput interface {
	pulumi.Input

	ToInstanceDeployParamsOutput() InstanceDeployParamsOutput
	ToInstanceDeployParamsOutputWithContext(context.Context) InstanceDeployParamsOutput
}

type InstanceDeployParamsArgs struct {
	DistroSeries pulumi.StringPtrInput `pulumi:"distroSeries"`
	EnableHwSync pulumi.BoolPtrInput   `pulumi:"enableHwSync"`
	HweKernel    pulumi.StringPtrInput `pulumi:"hweKernel"`
	UserData     pulumi.StringPtrInput `pulumi:"userData"`
}

func (InstanceDeployParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDeployParams)(nil)).Elem()
}

func (i InstanceDeployParamsArgs) ToInstanceDeployParamsOutput() InstanceDeployParamsOutput {
	return i.ToInstanceDeployParamsOutputWithContext(context.Background())
}

func (i InstanceDeployParamsArgs) ToInstanceDeployParamsOutputWithContext(ctx context.Context) InstanceDeployParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDeployParamsOutput)
}

func (i InstanceDeployParamsArgs) ToInstanceDeployParamsPtrOutput() InstanceDeployParamsPtrOutput {
	return i.ToInstanceDeployParamsPtrOutputWithContext(context.Background())
}

func (i InstanceDeployParamsArgs) ToInstanceDeployParamsPtrOutputWithContext(ctx context.Context) InstanceDeployParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDeployParamsOutput).ToInstanceDeployParamsPtrOutputWithContext(ctx)
}

// InstanceDeployParamsPtrInput is an input type that accepts InstanceDeployParamsArgs, InstanceDeployParamsPtr and InstanceDeployParamsPtrOutput values.
// You can construct a concrete instance of `InstanceDeployParamsPtrInput` via:
//
//	        InstanceDeployParamsArgs{...}
//
//	or:
//
//	        nil
type InstanceDeployParamsPtrInput interface {
	pulumi.Input

	ToInstanceDeployParamsPtrOutput() InstanceDeployParamsPtrOutput
	ToInstanceDeployParamsPtrOutputWithContext(context.Context) InstanceDeployParamsPtrOutput
}

type instanceDeployParamsPtrType InstanceDeployParamsArgs

func InstanceDeployParamsPtr(v *InstanceDeployParamsArgs) InstanceDeployParamsPtrInput {
	return (*instanceDeployParamsPtrType)(v)
}

func (*instanceDeployParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDeployParams)(nil)).Elem()
}

func (i *instanceDeployParamsPtrType) ToInstanceDeployParamsPtrOutput() InstanceDeployParamsPtrOutput {
	return i.ToInstanceDeployParamsPtrOutputWithContext(context.Background())
}

func (i *instanceDeployParamsPtrType) ToInstanceDeployParamsPtrOutputWithContext(ctx context.Context) InstanceDeployParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDeployParamsPtrOutput)
}

type InstanceDeployParamsOutput struct{ *pulumi.OutputState }

func (InstanceDeployParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDeployParams)(nil)).Elem()
}

func (o InstanceDeployParamsOutput) ToInstanceDeployParamsOutput() InstanceDeployParamsOutput {
	return o
}

func (o InstanceDeployParamsOutput) ToInstanceDeployParamsOutputWithContext(ctx context.Context) InstanceDeployParamsOutput {
	return o
}

func (o InstanceDeployParamsOutput) ToInstanceDeployParamsPtrOutput() InstanceDeployParamsPtrOutput {
	return o.ToInstanceDeployParamsPtrOutputWithContext(context.Background())
}

func (o InstanceDeployParamsOutput) ToInstanceDeployParamsPtrOutputWithContext(ctx context.Context) InstanceDeployParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDeployParams) *InstanceDeployParams {
		return &v
	}).(InstanceDeployParamsPtrOutput)
}

func (o InstanceDeployParamsOutput) DistroSeries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDeployParams) *string { return v.DistroSeries }).(pulumi.StringPtrOutput)
}

func (o InstanceDeployParamsOutput) EnableHwSync() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDeployParams) *bool { return v.EnableHwSync }).(pulumi.BoolPtrOutput)
}

func (o InstanceDeployParamsOutput) HweKernel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDeployParams) *string { return v.HweKernel }).(pulumi.StringPtrOutput)
}

func (o InstanceDeployParamsOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDeployParams) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type InstanceDeployParamsPtrOutput struct{ *pulumi.OutputState }

func (InstanceDeployParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDeployParams)(nil)).Elem()
}

func (o InstanceDeployParamsPtrOutput) ToInstanceDeployParamsPtrOutput() InstanceDeployParamsPtrOutput {
	return o
}

func (o InstanceDeployParamsPtrOutput) ToInstanceDeployParamsPtrOutputWithContext(ctx context.Context) InstanceDeployParamsPtrOutput {
	return o
}

func (o InstanceDeployParamsPtrOutput) Elem() InstanceDeployParamsOutput {
	return o.ApplyT(func(v *InstanceDeployParams) InstanceDeployParams {
		if v != nil {
			return *v
		}
		var ret InstanceDeployParams
		return ret
	}).(InstanceDeployParamsOutput)
}

func (o InstanceDeployParamsPtrOutput) DistroSeries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDeployParams) *string {
		if v == nil {
			return nil
		}
		return v.DistroSeries
	}).(pulumi.StringPtrOutput)
}

func (o InstanceDeployParamsPtrOutput) EnableHwSync() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceDeployParams) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHwSync
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceDeployParamsPtrOutput) HweKernel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDeployParams) *string {
		if v == nil {
			return nil
		}
		return v.HweKernel
	}).(pulumi.StringPtrOutput)
}

func (o InstanceDeployParamsPtrOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDeployParams) *string {
		if v == nil {
			return nil
		}
		return v.UserData
	}).(pulumi.StringPtrOutput)
}

type InstanceNetworkInterface struct {
	IpAddress  *string `pulumi:"ipAddress"`
	Name       string  `pulumi:"name"`
	SubnetCidr *string `pulumi:"subnetCidr"`
}

// InstanceNetworkInterfaceInput is an input type that accepts InstanceNetworkInterfaceArgs and InstanceNetworkInterfaceOutput values.
// You can construct a concrete instance of `InstanceNetworkInterfaceInput` via:
//
//	InstanceNetworkInterfaceArgs{...}
type InstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput
	ToInstanceNetworkInterfaceOutputWithContext(context.Context) InstanceNetworkInterfaceOutput
}

type InstanceNetworkInterfaceArgs struct {
	IpAddress  pulumi.StringPtrInput `pulumi:"ipAddress"`
	Name       pulumi.StringInput    `pulumi:"name"`
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
}

func (InstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return i.ToInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceOutput)
}

// InstanceNetworkInterfaceArrayInput is an input type that accepts InstanceNetworkInterfaceArray and InstanceNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `InstanceNetworkInterfaceArrayInput` via:
//
//	InstanceNetworkInterfaceArray{ InstanceNetworkInterfaceArgs{...} }
type InstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput
	ToInstanceNetworkInterfaceArrayOutputWithContext(context.Context) InstanceNetworkInterfaceArrayOutput
}

type InstanceNetworkInterfaceArray []InstanceNetworkInterfaceInput

func (InstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return i.ToInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceArrayOutput)
}

type InstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) string { return v.Name }).(pulumi.StringOutput)
}

func (o InstanceNetworkInterfaceOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

type InstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNetworkInterface {
		return vs[0].([]InstanceNetworkInterface)[vs[1].(int)]
	}).(InstanceNetworkInterfaceOutput)
}

type SubnetIpRangeType struct {
	Comment *string `pulumi:"comment"`
	EndIp   string  `pulumi:"endIp"`
	StartIp string  `pulumi:"startIp"`
	Type    string  `pulumi:"type"`
}

// SubnetIpRangeTypeInput is an input type that accepts SubnetIpRangeTypeArgs and SubnetIpRangeTypeOutput values.
// You can construct a concrete instance of `SubnetIpRangeTypeInput` via:
//
//	SubnetIpRangeTypeArgs{...}
type SubnetIpRangeTypeInput interface {
	pulumi.Input

	ToSubnetIpRangeTypeOutput() SubnetIpRangeTypeOutput
	ToSubnetIpRangeTypeOutputWithContext(context.Context) SubnetIpRangeTypeOutput
}

type SubnetIpRangeTypeArgs struct {
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	EndIp   pulumi.StringInput    `pulumi:"endIp"`
	StartIp pulumi.StringInput    `pulumi:"startIp"`
	Type    pulumi.StringInput    `pulumi:"type"`
}

func (SubnetIpRangeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetIpRangeType)(nil)).Elem()
}

func (i SubnetIpRangeTypeArgs) ToSubnetIpRangeTypeOutput() SubnetIpRangeTypeOutput {
	return i.ToSubnetIpRangeTypeOutputWithContext(context.Background())
}

func (i SubnetIpRangeTypeArgs) ToSubnetIpRangeTypeOutputWithContext(ctx context.Context) SubnetIpRangeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetIpRangeTypeOutput)
}

// SubnetIpRangeTypeArrayInput is an input type that accepts SubnetIpRangeTypeArray and SubnetIpRangeTypeArrayOutput values.
// You can construct a concrete instance of `SubnetIpRangeTypeArrayInput` via:
//
//	SubnetIpRangeTypeArray{ SubnetIpRangeTypeArgs{...} }
type SubnetIpRangeTypeArrayInput interface {
	pulumi.Input

	ToSubnetIpRangeTypeArrayOutput() SubnetIpRangeTypeArrayOutput
	ToSubnetIpRangeTypeArrayOutputWithContext(context.Context) SubnetIpRangeTypeArrayOutput
}

type SubnetIpRangeTypeArray []SubnetIpRangeTypeInput

func (SubnetIpRangeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetIpRangeType)(nil)).Elem()
}

func (i SubnetIpRangeTypeArray) ToSubnetIpRangeTypeArrayOutput() SubnetIpRangeTypeArrayOutput {
	return i.ToSubnetIpRangeTypeArrayOutputWithContext(context.Background())
}

func (i SubnetIpRangeTypeArray) ToSubnetIpRangeTypeArrayOutputWithContext(ctx context.Context) SubnetIpRangeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetIpRangeTypeArrayOutput)
}

type SubnetIpRangeTypeOutput struct{ *pulumi.OutputState }

func (SubnetIpRangeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetIpRangeType)(nil)).Elem()
}

func (o SubnetIpRangeTypeOutput) ToSubnetIpRangeTypeOutput() SubnetIpRangeTypeOutput {
	return o
}

func (o SubnetIpRangeTypeOutput) ToSubnetIpRangeTypeOutputWithContext(ctx context.Context) SubnetIpRangeTypeOutput {
	return o
}

func (o SubnetIpRangeTypeOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetIpRangeType) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o SubnetIpRangeTypeOutput) EndIp() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetIpRangeType) string { return v.EndIp }).(pulumi.StringOutput)
}

func (o SubnetIpRangeTypeOutput) StartIp() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetIpRangeType) string { return v.StartIp }).(pulumi.StringOutput)
}

func (o SubnetIpRangeTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetIpRangeType) string { return v.Type }).(pulumi.StringOutput)
}

type SubnetIpRangeTypeArrayOutput struct{ *pulumi.OutputState }

func (SubnetIpRangeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetIpRangeType)(nil)).Elem()
}

func (o SubnetIpRangeTypeArrayOutput) ToSubnetIpRangeTypeArrayOutput() SubnetIpRangeTypeArrayOutput {
	return o
}

func (o SubnetIpRangeTypeArrayOutput) ToSubnetIpRangeTypeArrayOutputWithContext(ctx context.Context) SubnetIpRangeTypeArrayOutput {
	return o
}

func (o SubnetIpRangeTypeArrayOutput) Index(i pulumi.IntInput) SubnetIpRangeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetIpRangeType {
		return vs[0].([]SubnetIpRangeType)[vs[1].(int)]
	}).(SubnetIpRangeTypeOutput)
}

type VmHostMachineNetworkInterface struct {
	Fabric     *string `pulumi:"fabric"`
	IpAddress  *string `pulumi:"ipAddress"`
	Name       string  `pulumi:"name"`
	SubnetCidr *string `pulumi:"subnetCidr"`
	Vlan       *string `pulumi:"vlan"`
}

// VmHostMachineNetworkInterfaceInput is an input type that accepts VmHostMachineNetworkInterfaceArgs and VmHostMachineNetworkInterfaceOutput values.
// You can construct a concrete instance of `VmHostMachineNetworkInterfaceInput` via:
//
//	VmHostMachineNetworkInterfaceArgs{...}
type VmHostMachineNetworkInterfaceInput interface {
	pulumi.Input

	ToVmHostMachineNetworkInterfaceOutput() VmHostMachineNetworkInterfaceOutput
	ToVmHostMachineNetworkInterfaceOutputWithContext(context.Context) VmHostMachineNetworkInterfaceOutput
}

type VmHostMachineNetworkInterfaceArgs struct {
	Fabric     pulumi.StringPtrInput `pulumi:"fabric"`
	IpAddress  pulumi.StringPtrInput `pulumi:"ipAddress"`
	Name       pulumi.StringInput    `pulumi:"name"`
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	Vlan       pulumi.StringPtrInput `pulumi:"vlan"`
}

func (VmHostMachineNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmHostMachineNetworkInterface)(nil)).Elem()
}

func (i VmHostMachineNetworkInterfaceArgs) ToVmHostMachineNetworkInterfaceOutput() VmHostMachineNetworkInterfaceOutput {
	return i.ToVmHostMachineNetworkInterfaceOutputWithContext(context.Background())
}

func (i VmHostMachineNetworkInterfaceArgs) ToVmHostMachineNetworkInterfaceOutputWithContext(ctx context.Context) VmHostMachineNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmHostMachineNetworkInterfaceOutput)
}

// VmHostMachineNetworkInterfaceArrayInput is an input type that accepts VmHostMachineNetworkInterfaceArray and VmHostMachineNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `VmHostMachineNetworkInterfaceArrayInput` via:
//
//	VmHostMachineNetworkInterfaceArray{ VmHostMachineNetworkInterfaceArgs{...} }
type VmHostMachineNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToVmHostMachineNetworkInterfaceArrayOutput() VmHostMachineNetworkInterfaceArrayOutput
	ToVmHostMachineNetworkInterfaceArrayOutputWithContext(context.Context) VmHostMachineNetworkInterfaceArrayOutput
}

type VmHostMachineNetworkInterfaceArray []VmHostMachineNetworkInterfaceInput

func (VmHostMachineNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmHostMachineNetworkInterface)(nil)).Elem()
}

func (i VmHostMachineNetworkInterfaceArray) ToVmHostMachineNetworkInterfaceArrayOutput() VmHostMachineNetworkInterfaceArrayOutput {
	return i.ToVmHostMachineNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i VmHostMachineNetworkInterfaceArray) ToVmHostMachineNetworkInterfaceArrayOutputWithContext(ctx context.Context) VmHostMachineNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmHostMachineNetworkInterfaceArrayOutput)
}

type VmHostMachineNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (VmHostMachineNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmHostMachineNetworkInterface)(nil)).Elem()
}

func (o VmHostMachineNetworkInterfaceOutput) ToVmHostMachineNetworkInterfaceOutput() VmHostMachineNetworkInterfaceOutput {
	return o
}

func (o VmHostMachineNetworkInterfaceOutput) ToVmHostMachineNetworkInterfaceOutputWithContext(ctx context.Context) VmHostMachineNetworkInterfaceOutput {
	return o
}

func (o VmHostMachineNetworkInterfaceOutput) Fabric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostMachineNetworkInterface) *string { return v.Fabric }).(pulumi.StringPtrOutput)
}

func (o VmHostMachineNetworkInterfaceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostMachineNetworkInterface) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o VmHostMachineNetworkInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VmHostMachineNetworkInterface) string { return v.Name }).(pulumi.StringOutput)
}

func (o VmHostMachineNetworkInterfaceOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostMachineNetworkInterface) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

func (o VmHostMachineNetworkInterfaceOutput) Vlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostMachineNetworkInterface) *string { return v.Vlan }).(pulumi.StringPtrOutput)
}

type VmHostMachineNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VmHostMachineNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmHostMachineNetworkInterface)(nil)).Elem()
}

func (o VmHostMachineNetworkInterfaceArrayOutput) ToVmHostMachineNetworkInterfaceArrayOutput() VmHostMachineNetworkInterfaceArrayOutput {
	return o
}

func (o VmHostMachineNetworkInterfaceArrayOutput) ToVmHostMachineNetworkInterfaceArrayOutputWithContext(ctx context.Context) VmHostMachineNetworkInterfaceArrayOutput {
	return o
}

func (o VmHostMachineNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) VmHostMachineNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmHostMachineNetworkInterface {
		return vs[0].([]VmHostMachineNetworkInterface)[vs[1].(int)]
	}).(VmHostMachineNetworkInterfaceOutput)
}

type VmHostMachineStorageDisk struct {
	Pool          *string `pulumi:"pool"`
	SizeGigabytes int     `pulumi:"sizeGigabytes"`
}

// VmHostMachineStorageDiskInput is an input type that accepts VmHostMachineStorageDiskArgs and VmHostMachineStorageDiskOutput values.
// You can construct a concrete instance of `VmHostMachineStorageDiskInput` via:
//
//	VmHostMachineStorageDiskArgs{...}
type VmHostMachineStorageDiskInput interface {
	pulumi.Input

	ToVmHostMachineStorageDiskOutput() VmHostMachineStorageDiskOutput
	ToVmHostMachineStorageDiskOutputWithContext(context.Context) VmHostMachineStorageDiskOutput
}

type VmHostMachineStorageDiskArgs struct {
	Pool          pulumi.StringPtrInput `pulumi:"pool"`
	SizeGigabytes pulumi.IntInput       `pulumi:"sizeGigabytes"`
}

func (VmHostMachineStorageDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmHostMachineStorageDisk)(nil)).Elem()
}

func (i VmHostMachineStorageDiskArgs) ToVmHostMachineStorageDiskOutput() VmHostMachineStorageDiskOutput {
	return i.ToVmHostMachineStorageDiskOutputWithContext(context.Background())
}

func (i VmHostMachineStorageDiskArgs) ToVmHostMachineStorageDiskOutputWithContext(ctx context.Context) VmHostMachineStorageDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmHostMachineStorageDiskOutput)
}

// VmHostMachineStorageDiskArrayInput is an input type that accepts VmHostMachineStorageDiskArray and VmHostMachineStorageDiskArrayOutput values.
// You can construct a concrete instance of `VmHostMachineStorageDiskArrayInput` via:
//
//	VmHostMachineStorageDiskArray{ VmHostMachineStorageDiskArgs{...} }
type VmHostMachineStorageDiskArrayInput interface {
	pulumi.Input

	ToVmHostMachineStorageDiskArrayOutput() VmHostMachineStorageDiskArrayOutput
	ToVmHostMachineStorageDiskArrayOutputWithContext(context.Context) VmHostMachineStorageDiskArrayOutput
}

type VmHostMachineStorageDiskArray []VmHostMachineStorageDiskInput

func (VmHostMachineStorageDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmHostMachineStorageDisk)(nil)).Elem()
}

func (i VmHostMachineStorageDiskArray) ToVmHostMachineStorageDiskArrayOutput() VmHostMachineStorageDiskArrayOutput {
	return i.ToVmHostMachineStorageDiskArrayOutputWithContext(context.Background())
}

func (i VmHostMachineStorageDiskArray) ToVmHostMachineStorageDiskArrayOutputWithContext(ctx context.Context) VmHostMachineStorageDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmHostMachineStorageDiskArrayOutput)
}

type VmHostMachineStorageDiskOutput struct{ *pulumi.OutputState }

func (VmHostMachineStorageDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmHostMachineStorageDisk)(nil)).Elem()
}

func (o VmHostMachineStorageDiskOutput) ToVmHostMachineStorageDiskOutput() VmHostMachineStorageDiskOutput {
	return o
}

func (o VmHostMachineStorageDiskOutput) ToVmHostMachineStorageDiskOutputWithContext(ctx context.Context) VmHostMachineStorageDiskOutput {
	return o
}

func (o VmHostMachineStorageDiskOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmHostMachineStorageDisk) *string { return v.Pool }).(pulumi.StringPtrOutput)
}

func (o VmHostMachineStorageDiskOutput) SizeGigabytes() pulumi.IntOutput {
	return o.ApplyT(func(v VmHostMachineStorageDisk) int { return v.SizeGigabytes }).(pulumi.IntOutput)
}

type VmHostMachineStorageDiskArrayOutput struct{ *pulumi.OutputState }

func (VmHostMachineStorageDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmHostMachineStorageDisk)(nil)).Elem()
}

func (o VmHostMachineStorageDiskArrayOutput) ToVmHostMachineStorageDiskArrayOutput() VmHostMachineStorageDiskArrayOutput {
	return o
}

func (o VmHostMachineStorageDiskArrayOutput) ToVmHostMachineStorageDiskArrayOutputWithContext(ctx context.Context) VmHostMachineStorageDiskArrayOutput {
	return o
}

func (o VmHostMachineStorageDiskArrayOutput) Index(i pulumi.IntInput) VmHostMachineStorageDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmHostMachineStorageDisk {
		return vs[0].([]VmHostMachineStorageDisk)[vs[1].(int)]
	}).(VmHostMachineStorageDiskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDevicePartitionInput)(nil)).Elem(), BlockDevicePartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlockDevicePartitionArrayInput)(nil)).Elem(), BlockDevicePartitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAllocateParamsInput)(nil)).Elem(), InstanceAllocateParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAllocateParamsPtrInput)(nil)).Elem(), InstanceAllocateParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDeployParamsInput)(nil)).Elem(), InstanceDeployParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDeployParamsPtrInput)(nil)).Elem(), InstanceDeployParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNetworkInterfaceInput)(nil)).Elem(), InstanceNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNetworkInterfaceArrayInput)(nil)).Elem(), InstanceNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetIpRangeTypeInput)(nil)).Elem(), SubnetIpRangeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetIpRangeTypeArrayInput)(nil)).Elem(), SubnetIpRangeTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmHostMachineNetworkInterfaceInput)(nil)).Elem(), VmHostMachineNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmHostMachineNetworkInterfaceArrayInput)(nil)).Elem(), VmHostMachineNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmHostMachineStorageDiskInput)(nil)).Elem(), VmHostMachineStorageDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmHostMachineStorageDiskArrayInput)(nil)).Elem(), VmHostMachineStorageDiskArray{})
	pulumi.RegisterOutputType(BlockDevicePartitionOutput{})
	pulumi.RegisterOutputType(BlockDevicePartitionArrayOutput{})
	pulumi.RegisterOutputType(InstanceAllocateParamsOutput{})
	pulumi.RegisterOutputType(InstanceAllocateParamsPtrOutput{})
	pulumi.RegisterOutputType(InstanceDeployParamsOutput{})
	pulumi.RegisterOutputType(InstanceDeployParamsPtrOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SubnetIpRangeTypeOutput{})
	pulumi.RegisterOutputType(SubnetIpRangeTypeArrayOutput{})
	pulumi.RegisterOutputType(VmHostMachineNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(VmHostMachineNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VmHostMachineStorageDiskOutput{})
	pulumi.RegisterOutputType(VmHostMachineStorageDiskArrayOutput{})
}
