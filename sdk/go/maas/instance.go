// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maas

import (
	"context"
	"reflect"

	"github.com/juhnny5/pulumi-maas/sdk/go/maas/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Instance struct {
	pulumi.CustomResourceState

	// Nested argument with the constraints used to machine allocation. Defined below.
	AllocateParams InstanceAllocateParamsPtrOutput `pulumi:"allocateParams"`
	// The number of CPU cores of the deployed MAAS machine.
	CpuCount pulumi.IntOutput `pulumi:"cpuCount"`
	// Nested argument with the config used to deploy the allocated machine. Defined below.
	DeployParams InstanceDeployParamsPtrOutput `pulumi:"deployParams"`
	// The deployed MAAS machine FQDN.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// The deployed MAAS machine hostname.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// A set of IP addressed assigned to the deployed MAAS machine.
	IpAddresses pulumi.StringArrayOutput `pulumi:"ipAddresses"`
	// The RAM memory size (in GiB) of the deployed MAAS machine.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Specifies a network interface configuration done before the machine is deployed. Parameters defined below. This argument
	// is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
	NetworkInterfaces InstanceNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// The deployed MAAS machine pool name.
	Pool pulumi.StringOutput `pulumi:"pool"`
	// A set of tag names associated to the deployed MAAS machine.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The deployed MAAS machine zone name.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		args = &InstanceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("maas:index/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("maas:index/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Nested argument with the constraints used to machine allocation. Defined below.
	AllocateParams *InstanceAllocateParams `pulumi:"allocateParams"`
	// The number of CPU cores of the deployed MAAS machine.
	CpuCount *int `pulumi:"cpuCount"`
	// Nested argument with the config used to deploy the allocated machine. Defined below.
	DeployParams *InstanceDeployParams `pulumi:"deployParams"`
	// The deployed MAAS machine FQDN.
	Fqdn *string `pulumi:"fqdn"`
	// The deployed MAAS machine hostname.
	Hostname *string `pulumi:"hostname"`
	// A set of IP addressed assigned to the deployed MAAS machine.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The RAM memory size (in GiB) of the deployed MAAS machine.
	Memory *int `pulumi:"memory"`
	// Specifies a network interface configuration done before the machine is deployed. Parameters defined below. This argument
	// is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
	NetworkInterfaces []InstanceNetworkInterface `pulumi:"networkInterfaces"`
	// The deployed MAAS machine pool name.
	Pool *string `pulumi:"pool"`
	// A set of tag names associated to the deployed MAAS machine.
	Tags []string `pulumi:"tags"`
	// The deployed MAAS machine zone name.
	Zone *string `pulumi:"zone"`
}

type InstanceState struct {
	// Nested argument with the constraints used to machine allocation. Defined below.
	AllocateParams InstanceAllocateParamsPtrInput
	// The number of CPU cores of the deployed MAAS machine.
	CpuCount pulumi.IntPtrInput
	// Nested argument with the config used to deploy the allocated machine. Defined below.
	DeployParams InstanceDeployParamsPtrInput
	// The deployed MAAS machine FQDN.
	Fqdn pulumi.StringPtrInput
	// The deployed MAAS machine hostname.
	Hostname pulumi.StringPtrInput
	// A set of IP addressed assigned to the deployed MAAS machine.
	IpAddresses pulumi.StringArrayInput
	// The RAM memory size (in GiB) of the deployed MAAS machine.
	Memory pulumi.IntPtrInput
	// Specifies a network interface configuration done before the machine is deployed. Parameters defined below. This argument
	// is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
	NetworkInterfaces InstanceNetworkInterfaceArrayInput
	// The deployed MAAS machine pool name.
	Pool pulumi.StringPtrInput
	// A set of tag names associated to the deployed MAAS machine.
	Tags pulumi.StringArrayInput
	// The deployed MAAS machine zone name.
	Zone pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Nested argument with the constraints used to machine allocation. Defined below.
	AllocateParams *InstanceAllocateParams `pulumi:"allocateParams"`
	// Nested argument with the config used to deploy the allocated machine. Defined below.
	DeployParams *InstanceDeployParams `pulumi:"deployParams"`
	// Specifies a network interface configuration done before the machine is deployed. Parameters defined below. This argument
	// is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
	NetworkInterfaces []InstanceNetworkInterface `pulumi:"networkInterfaces"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Nested argument with the constraints used to machine allocation. Defined below.
	AllocateParams InstanceAllocateParamsPtrInput
	// Nested argument with the config used to deploy the allocated machine. Defined below.
	DeployParams InstanceDeployParamsPtrInput
	// Specifies a network interface configuration done before the machine is deployed. Parameters defined below. This argument
	// is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
	NetworkInterfaces InstanceNetworkInterfaceArrayInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Nested argument with the constraints used to machine allocation. Defined below.
func (o InstanceOutput) AllocateParams() InstanceAllocateParamsPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceAllocateParamsPtrOutput { return v.AllocateParams }).(InstanceAllocateParamsPtrOutput)
}

// The number of CPU cores of the deployed MAAS machine.
func (o InstanceOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.CpuCount }).(pulumi.IntOutput)
}

// Nested argument with the config used to deploy the allocated machine. Defined below.
func (o InstanceOutput) DeployParams() InstanceDeployParamsPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceDeployParamsPtrOutput { return v.DeployParams }).(InstanceDeployParamsPtrOutput)
}

// The deployed MAAS machine FQDN.
func (o InstanceOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// The deployed MAAS machine hostname.
func (o InstanceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// A set of IP addressed assigned to the deployed MAAS machine.
func (o InstanceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The RAM memory size (in GiB) of the deployed MAAS machine.
func (o InstanceOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// Specifies a network interface configuration done before the machine is deployed. Parameters defined below. This argument
// is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
func (o InstanceOutput) NetworkInterfaces() InstanceNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(InstanceNetworkInterfaceArrayOutput)
}

// The deployed MAAS machine pool name.
func (o InstanceOutput) Pool() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Pool }).(pulumi.StringOutput)
}

// A set of tag names associated to the deployed MAAS machine.
func (o InstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The deployed MAAS machine zone name.
func (o InstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
